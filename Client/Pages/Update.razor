@page "/update"

@using SmartHomeWWW.Core.Firmwares

@inject FirmwareHttpClient FirmwareHttpClient

<div class="text-center">
    <h1 class="display-4">Updates</h1>
    @if (Firmwares != null && Firmwares.Any())
    {
<table class="table table-borderless">
    <thead>
        <tr>
            <th scope="col">Version</th>
            <th scope="col">Size</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var firmware in Firmwares)
        {
        <tr>
            <td>@firmware.Version</td>
            <td>@firmware.Size</td>
        </tr>
        }
    </tbody>
</table>
    }
    else
    {
    <div class="alert alert-warning" role="alert">No firmwares found</div>
    }
    <div>Current version: <strong>@CurrentVersion</strong></div>
</div>

@code {

    private IReadOnlyList<Firmware> Firmwares = Array.Empty<Firmware>();
    private Version CurrentVersion = new Version();

    protected override async Task OnInitializedAsync()
    {
        Firmwares = (await FirmwareHttpClient.GetAllFirmwares())
            .OrderByDescending(f => f.Version)
            .ToList();

        CurrentVersion = await FirmwareHttpClient.GetCurrentVersion();

        await base.OnInitializedAsync();
    }

}
